# Basic Auth
default_user = ctolon
default_pass = examplepass
default_user_tags.administrator = true
default_permissions.configure = .*
default_permissions.read = .*
default_permissions.write = .*
auth_backends.1 = internal

# Network
listeners.tcp.default = 5672
tcp_listen_options.backlog = 128
tcp_listen_options.nodelay = true
tcp_listen_options.linger.on = true
tcp_listen_options.linger.timeout = 0
tcp_listen_options.exit_on_close = false
tcp_listen_options.keepalive = false
handshake_timeout = 30000

# Management plugin
management.listener.port = 15672
management.listener.ssl = false
# management.load_definitions = /etc/rabbitmq/definitions.json

# Clustering
cluster_name = nm-rabbitmq
cluster_formation.peer_discovery_backend = rabbit_peer_discovery_classic_config
cluster_formation.node_type = disc
cluster_partition_handling = ignore
cluster_keepalive_interval = 60000
cluster_formation.classic_config.nodes.1 = rabbit@rabbitmq-01
cluster_formation.classic_config.nodes.2 = rabbit@rabbitmq-02
cluster_formation.classic_config.nodes.3 = rabbit@rabbitmq-03
cluster_formation.discovery_retry_interval = 20000
cluster_formation.discovery_retry_limit = 10
cluster_formation.node_cleanup.interval = 90
cluster_formation.node_cleanup.only_log_warning = true
# cluster_partition_handling = pause_if_all_down
# cluster_partition_handling.pause_if_all_down.recover = autoheal

# Utils
mirroring_sync_batch_size = 4096
loopback_users.guest = false
max_message_size = 536870912
channel_max = 10000
# channel_operation_timeout = 60000
log.file.level = info

# VM
# vm_memory_high_watermark.relative=0.4
vm_memory_high_watermark.absolute = 2GB
vm_memory_calculation_strategy = allocated
vm_memory_high_watermark_paging_ratio = 0.5

# Disk
disk_free_limit.absolute = 2GB
disk_free_limit.absolute = 100MB

# Flush current WAL file to a segment file on disk once it reaches 32 MiB in size
raft.wal_max_size_bytes = 32000000


# SSL
# ssl_options.cacertfile           = /path/to/ca_certificate.pem
# ssl_options.certfile             = /path/to/server_certificate.pem
# ssl_options.keyfile              = /path/to/server_key.pem
# ssl_options.verify               = verify_peer
# ssl_options.fail_if_no_peer_cert = true