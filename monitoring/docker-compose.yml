version: '3.7'

services:
  prometheus:
    image: quay.io/prometheus/prometheus:v2.37.1
    restart: unless-stopped
    #    ports:
    #      - "9090:9090"
    expose:
      - "9090"
    #extra_hosts:  ## Prometheus'a, Metriklerini almak istediğiniz serverları tanıtmalısınız. ##
    volumes:
      - "./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml"
      - "./prometheus/alert.rules:/etc/prometheus/alert.rules"
      - "prometheus_data:/prometheus"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    links:
      - cadvisor:cadvisor
      - alertmanager:alertmanager
    depends_on:
      - cadvisor
    networks:
      - mlops_network

  grafana: 
      image: grafana/grafana
      restart: unless-stopped
      ports:
        - "${GF_SERVER_HTTP_PORT}:${GF_SERVER_HTTP_PORT}"
        - "3000:3000"
      environment:
        - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
        - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
        - GF_USERS_ALLOW_SIGN_UP=false
      expose:
        - "${GF_SERVER_HTTP_PORT}"
        - 3000
      volumes:
        - grafana_data:${GF_DATA_ROOT}
        - ./grafana/provisioning:/etc/grafana/provisioning
      depends_on:
        - prometheus
      networks:
        - mlops_network

  # Extra Monitoring Tools
  alertmanager:
    image: prom/alertmanager:v0.20.0
    container_name: alertmanager
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    restart: unless-stopped
    expose:
      - 9093
    networks:
      - mlops_network

  node-exporter:
    image: prom/node-exporter:v0.18.1
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
      #- --collector.filesystem.ignored-mount-points
      #- "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    restart: unless-stopped
    expose:
      - 9100
    networks:
      - mlops_network

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
      #- /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux
    restart: unless-stopped
    expose:
      - 8080
    devices:
      - /dev/kmsg:/dev/kmsg
    privileged: true
    networks:
      - mlops_network

  pushgateway:
    image: prom/pushgateway:v1.2.0
    container_name: pushgateway
    restart: unless-stopped
    expose:
      - 9091
    networks:
      - mlops_network

  prometheus-msteams:
    image: docker.io/bzon/prometheus-msteams:v1.1.4
    container_name: prometheus-msteams
    restart: unless-stopped
    environment:
        - TEAMS_INCOMING_WEBHOOK_URL=${MSTEAMS_WEBHOOK_URL:-VariableNotSet}
        - TEAMS_REQUEST_URI=alertmanager
    expose:
      - 2000
    networks:
      - mlops_network

# NOTE: We are using nginx as a reverse proxy instead of caddy
#  caddy:
#    image: stefanprodan/caddy
#    container_name: caddy
#    ports:
#      - "3000:3000"
#      - "9090:9090"
#      - "9093:9093"
#      - "9091:9091"
#    volumes:
#      - ./caddy:/etc/caddy
#      - /etc/resolv.conf:/etc/resolv.conf:ro
#    environment:
#      - CADDY_ADMIN_USER=${CADDY_ADMIN_USER:-admin}
#      - CADDY_ADMIN_PASSWORD=${CADDY_ADMIN_PASSWORD:-admin}
#    restart: unless-stopped
#    networks:
#      - mlops_network

  # Load Balancer
  nginx:
    image: nginx:1.19.2-alpine
    container_name: mlops-monitor-nginx
    hostname: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    # Add your MLOps Ports for nginx reverse proxy
    ports:
      - "9090:80"
    networks:
      mlops_network:
        ipv4_address: 172.48.0.60   # Replace with your desired static IP address for LB


## By default this config uses default local driver,
## For custom volumes replace with volume driver configuration.
volumes:
  prometheus_data: {}
  grafana_data: {}


networks:
  mlops_network:
    external: true