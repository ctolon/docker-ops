version: '3'

services:
  pgadmin-mlflow:
    image: dpage/pgadmin4
    depends_on:
      - postgresql-mlflow
    ports:
      - "5758:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@ctolon.ai
      PGADMIN_DEFAULT_PASSWORD: ctolon
    restart: unless-stopped
    networks:
      - mlops_network
      
  postgresql-mlflow:
    build:
      context: ./postgres
      dockerfile: Dockerfile
    image: postgresql-mlflow
    container_name: postgresql-mlflow
    user: postgres
    hostname: postgresql
    env_file:
      - .env
    ports:
      - ${POSTGRES_PORT_EXT}:${POSTGRES_PORT_INT}
    volumes:
      - $PWD/postgres/init:/docker-entrypoint-initdb.d
    restart: on-failure
    cap_add: 
      - SYS_NICE # CAP_SYS_NICE
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "mlflow"]
      interval: 5s
      timeout: 5s
      retries: 3
    networks:
      - mlops_network

  nm-mlflow:
    build:
      context: ./mlflow-tracking
      dockerfile: Dockerfile
    container_name: mlflow-tracking
    image: mlflow-tracking
    hostname: mlflow-tracking
    volumes:
      - postgres-mlflow-db-volume:/var/lib/postgresql/data
    env_file:
      - .env
    depends_on:
      - postgresql-mlflow
    links:
      - "postgresql-mlflow:postgresql-mlflow"
    expose:
      - 5000
    #ports:
    #  - ${MLFLOW_PORT}:${MLFLOW_PORT}
    command: >
      /bin/bash -c "sleep 3
      && mlflow server --host 0.0.0.0 --port 5000 --backend-store-uri postgresql+psycopg2://postgres:mysecret@postgresql/mlflow?sslmode=disable --default-artifact-root s3://mlflow/"
     # && mlflow server --app-name=basic-auth --host 0.0.0.0 --port 5000 --backend-store-uri postgresql+psycopg2://postgres:mysecret@postgresql/mlflow?sslmode=disable --default-artifact-root s3://mlflow/ --expose-prometheus /temp/prometheus_metrics"
    restart: on-failure
    networks:
      - mlops_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://0.0.0.0:5000"]
      interval: 5s
      timeout: 5s
      retries: 3
  
  # Load Balancer
  nginx:
    image: nginx:1.19.2-alpine
    container_name: mlflow-nginx
    hostname: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    # Add your MLOps Ports for nginx reverse proxy
    ports:
      - "5000:80"
      # - "80:80"
    networks:
      mlops_network:
        ipv4_address: 172.48.0.70   # Replace with your desired static IP address for LB

volumes:
  postgres-mlflow-db-volume: {}

networks:
  mlops_network:
    external: true


